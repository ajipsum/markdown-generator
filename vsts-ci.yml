trigger:
- master
- features/*
- release/*

variables:
  configuration: release

jobs:
- job: Build_and_Test
  pool: Hosted VS2017

  steps:
  - task: DotNetCoreInstaller@0
    displayName: Use .NET Core SDK 2.1
    inputs:
      version: 2.1.302

  - task: DotNetCoreCLI@2
    displayName: Restore NuGet dependencies
    env: { DOTNET_SKIP_FIRST_TIME_EXPERIENCE : true }
    inputs:
      command: restore
      projects: 'src/**/*.csproj'
  
  - task: DotNetCoreCLI@2
    displayName: Build
    env: { DOTNET_SKIP_FIRST_TIME_EXPERIENCE : true }
    inputs:
      command: build
      projects: 'src/**/*.csproj'
      arguments: '--configuration $(configuration) --no-restore'
  
  - task: DotNetCoreCLI@2
    displayName: Test
    env: { DOTNET_SKIP_FIRST_TIME_EXPERIENCE : true }
    inputs:
      command: test
      projects: 'src/**/*Test*.csproj'
      arguments: '--configuration $(configuration) --no-build'
  
  - task: DotNetCoreCLI@2
    displayName: Pack NuGet package
    env: { DOTNET_SKIP_FIRST_TIME_EXPERIENCE : true }
    inputs:
      command: pack
      projects: 'src/**/*.csproj'
      arguments: '--configuration $(configuration) --output $(Build.ArtifactStagingDirectory) --no-build'
  
  - task: PublishBuildArtifacts@1
    displayName: 'Publish Artifacts'
    inputs:
      artifactName: drop

- job: Publish_to_MyGet
  dependsOn: Build_and_Test
  condition: and(succeeded('Build_and_Test'), or(eq(variables['build.sourceBranch'], 'refs/heads/master'), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/') ))
  steps:
  - task: DownloadBuildArtifacts@0
    displayName: 'Download Build Artifacts'
    inputs: 
      buildType: current
      downloadType: single
      artifactName: drop
      downloadPath: $(Build.ArtifactStagingDirectory)
  - task: NuGetCommand@2
    displayName: "Upload package"
    inputs:
      command: push
      nugetFeedType: external
      publishFeedCredentials: 'MyGet - ap0llo-markdown-generator'    

- job: Publish_to_NuGet_org
  dependsOn: Build_and_Test
  condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/heads/release/'))
  steps:
  - task: DownloadBuildArtifacts@0
    displayName: 'Download Build Artifacts'
    inputs: 
      buildType: current
      downloadType: single
      artifactName: drop
      downloadPath: $(Build.ArtifactStagingDirectory)
  - task: NuGetCommand@2
    displayName: "Upload package"
    inputs:
      command: push
      nugetFeedType: external
      publishFeedCredentials: 'NuGet.org - markdown-generator'    



      